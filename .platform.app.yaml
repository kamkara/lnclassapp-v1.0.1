# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses. The 'type' key defines the base container
# image that will be used to run the application. There is a separate base
# container image for each primary language for the application,
# in multiple versions. Check the Ruby documentation
# (https://docs.platform.sh/languages/ruby.html#supported-versions)
# to find the supported versions for the 'ruby' type.
type: 'ruby:2.7'

# The following block defines a single writable directory, 'web/uploads'
# The 'source' specifies where the writable mount is. The 'local' source
# indicates that the mount point will point to a local directory on the
# application container. The 'source_path' specifies the subdirectory
# from within the source that the mount should point at. 

mounts:
    tmp:
        source: local
        source_path: tmp
    logs:
        source: local
        source_path: logs
# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form <service name>:<endpoint name>.
relationships:
    postgresdatabase: 'dbpostgres:postgresql'

# The size of the persistent disk of the application (in MB).
disk: 1024

# Set environment variables to adjust how Rails will run.
variables:
    env:
        RAILS_ENV: 'production'
        RAILS_LOG_TO_STDOUT: true
        BUNDLE_ERROR_ON_STDERR: 1
        RAILS_TMP: /tmp
        EXECJS_RUNTIME: 'Node'

dependencies:
    nodejs:
        yarn: "*"
        npm: "*"
        sass: "6.0.0"
   
hooks:
    build: |
      gem install bundler:2.2.16
      bundle config set --local without 'development test'
      npm install
      npm run build-css
      bundle install
      yarn install
      bundle exec rake assets:precompile
    deploy: |
     bundle exec rake db:migrate

web:
  upstream: 
    socket_family: "unix"
  commands: 
    start: "unicorn -l $SOCKET -E production config.ru"
  locations: 
    '/': 
      root: "public"
      passthru: true
      expires: 1h
      allow: true
